# chart/templates/tech-doc-generator.yaml
{{- if .Values.techDocGenerator.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tech-doc-generator
  labels:
{{- include "threads.labels" . | nindent 4 }}
    component: tech-doc-generator
spec:
  replicas: {{ .Values.techDocGenerator.replicaCount | default 1 }}
  selector:
    matchLabels:
      app: tech-doc-generator
  template:
    metadata:
      labels:
        app: tech-doc-generator
        component: tech-doc-generator
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      containers:
        - name: tech-doc-generator
          image: "{{ .Values.techDocGenerator.image.repository }}:{{ .Values.techDocGenerator.image.tag | default .Values.image.tag }}"
          imagePullPolicy: {{ .Values.techDocGenerator.image.pullPolicy | default "IfNotPresent" }}
          env:
            # Database configuration
            - name: DATABASE_URL
              value: "postgresql+asyncpg://postgres:{{ .Values.postgres.auth.postgresPassword }}@postgres:5432/postgres"
            - name: POSTGRES_DSN
              value: "postgresql+psycopg2://postgres:{{ .Values.postgres.auth.postgresPassword }}@postgres:5432/postgres"
            
            # Redis configuration for caching
            - name: REDIS_URL
              value: "redis://redis:6379/2"
            - name: CACHE_REDIS_URL
              value: "redis://redis:6379/2"
            
            # Service URLs for integration
            - name: ACHIEVEMENT_COLLECTOR_URL
              value: "http://achievement-collector:8080"
            - name: VIRAL_ENGINE_URL
              value: "http://viral-engine:8080"
            - name: ORCHESTRATOR_URL
              value: "http://orchestrator:8080"
            
            # AI ROI Calculator configuration
            - name: ROI_CALCULATOR_ENABLED
              value: "{{ .Values.techDocGenerator.roiCalculator.enabled | default true }}"
            - name: LEAD_CAPTURE_ENABLED
              value: "{{ .Values.techDocGenerator.leadCapture.enabled | default true }}"
            
            # Content scheduler configuration
            - name: CONTENT_SCHEDULER_ENABLED
              value: "{{ .Values.techDocGenerator.contentScheduler.enabled | default true }}"
            - name: DEFAULT_TARGET_COMPANIES
              value: "{{ .Values.techDocGenerator.contentScheduler.defaultCompanies | default "anthropic,notion,stripe" }}"
            
            # Performance and monitoring
            - name: ENVIRONMENT
              value: "{{ .Values.environment | default "production" }}"
            - name: LOG_LEVEL
              value: "{{ .Values.techDocGenerator.logLevel | default "INFO" }}"
            - name: METRICS_ENABLED
              value: "true"
            
          envFrom:
            - secretRef:
                name: openai-secret
            - secretRef:
                name: tech-doc-generator-secrets
                optional: true
          
          ports:
            - name: http
              containerPort: 8080
            - name: metrics
              containerPort: 8080
          
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 15
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 30
            timeoutSeconds: 10
            failureThreshold: 3
          
          resources:
            requests:
              memory: {{ .Values.techDocGenerator.resources.requests.memory | default "256Mi" }}
              cpu: {{ .Values.techDocGenerator.resources.requests.cpu | default "100m" }}
            limits:
              memory: {{ .Values.techDocGenerator.resources.limits.memory | default "1Gi" }}
              cpu: {{ .Values.techDocGenerator.resources.limits.cpu | default "500m" }}

---
apiVersion: v1
kind: Service
metadata:
  name: tech-doc-generator
  labels:
{{- include "threads.labels" . | nindent 4 }}
    component: tech-doc-generator
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8080"
    prometheus.io/path: "/metrics"
spec:
  type: {{ .Values.techDocGenerator.service.type | default "ClusterIP" }}
  selector:
    app: tech-doc-generator
  ports:
    - name: http
      port: {{ .Values.techDocGenerator.service.port | default 8080 }}
      targetPort: 8080
      protocol: TCP

---
{{- if .Values.techDocGenerator.roiCalculator.ingress.enabled }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: tech-doc-generator-public
  labels:
{{- include "threads.labels" . | nindent 4 }}
    component: tech-doc-generator-public
  annotations:
    kubernetes.io/ingress.class: {{ .Values.techDocGenerator.roiCalculator.ingress.className | default "nginx" }}
    cert-manager.io/cluster-issuer: {{ .Values.techDocGenerator.roiCalculator.ingress.tlsIssuer | default "letsencrypt-prod" }}
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization"
spec:
  tls:
    - hosts:
        - {{ .Values.techDocGenerator.roiCalculator.ingress.host }}
      secretName: tech-doc-generator-tls
  rules:
    - host: {{ .Values.techDocGenerator.roiCalculator.ingress.host }}
      http:
        paths:
          - path: /api/ai-roi-calculator
            pathType: Prefix
            backend:
              service:
                name: tech-doc-generator
                port:
                  number: 8080
          - path: /docs
            pathType: Prefix
            backend:
              service:
                name: tech-doc-generator
                port:
                  number: 8080
{{- end }}

---
{{- if .Values.techDocGenerator.networkPolicy.enabled }}
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: tech-doc-generator-network-policy
  labels:
{{- include "threads.labels" . | nindent 4 }}
    component: tech-doc-generator
spec:
  podSelector:
    matchLabels:
      app: tech-doc-generator
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: orchestrator
    - podSelector:
        matchLabels:
          app: achievement-collector
    - namespaceSelector:
        matchLabels:
          name: monitoring
    ports:
    - protocol: TCP
      port: 8080
  egress:
  - to:
    - podSelector:
        matchLabels:
          app: postgres
    ports:
    - protocol: TCP
      port: 5432
  - to:
    - podSelector:
        matchLabels:
          app: redis
    ports:
    - protocol: TCP
      port: 6379
  - to:
    - podSelector:
        matchLabels:
          app: achievement-collector
    ports:
    - protocol: TCP
      port: 8080
  - to:
    - podSelector:
        matchLabels:
          app: viral-engine
    ports:
    - protocol: TCP
      port: 8080
  - to: []
    ports:
    - protocol: TCP
      port: 443  # HTTPS for OpenAI API
    - protocol: TCP
      port: 80   # HTTP for health checks
{{- end }}

---
{{- if .Values.techDocGenerator.podDisruptionBudget.enabled }}
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: tech-doc-generator-pdb
  labels:
{{- include "threads.labels" . | nindent 4 }}
    component: tech-doc-generator
spec:
  minAvailable: {{ .Values.techDocGenerator.podDisruptionBudget.minAvailable | default 1 }}
  selector:
    matchLabels:
      app: tech-doc-generator
{{- end }}

---
{{- if .Values.techDocGenerator.hpa.enabled }}
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: tech-doc-generator-hpa
  labels:
{{- include "threads.labels" . | nindent 4 }}
    component: tech-doc-generator
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: tech-doc-generator
  minReplicas: {{ .Values.techDocGenerator.hpa.minReplicas | default 1 }}
  maxReplicas: {{ .Values.techDocGenerator.hpa.maxReplicas | default 5 }}
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: {{ .Values.techDocGenerator.hpa.targetCPUUtilization | default 70 }}
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: {{ .Values.techDocGenerator.hpa.targetMemoryUtilization | default 80 }}
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 60
      - type: Pods
        value: 2
        periodSeconds: 60
      selectPolicy: Max
{{- end }}
{{- end }}