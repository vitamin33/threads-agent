{{- if .Values.monitoring.grafana.enabled }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  labels:
    app: grafana
    {{- include "threads.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
        {{- include "threads.labels" . | nindent 8 }}
    spec:
      containers:
      - name: grafana
        image: "{{ .Values.monitoring.grafana.image.repository }}:{{ .Values.monitoring.grafana.image.tag }}"
        ports:
        - containerPort: 3000
          name: grafana
        env:
        - name: GF_SECURITY_ADMIN_PASSWORD
          value: "{{ .Values.monitoring.grafana.adminPassword }}"
        - name: GF_INSTALL_PLUGINS
          value: "{{ .Values.monitoring.grafana.plugins }}"
        - name: GF_PROVISIONING_PATH
          value: "/etc/grafana/provisioning"
        resources:
          {{- toYaml .Values.monitoring.grafana.resources | nindent 10 }}
        volumeMounts:
        - name: grafana-storage
          mountPath: /var/lib/grafana
        - name: grafana-datasources
          mountPath: /etc/grafana/provisioning/datasources
          readOnly: true
        - name: grafana-dashboards-config
          mountPath: /etc/grafana/provisioning/dashboards
          readOnly: true
        - name: grafana-dashboards
          mountPath: /var/lib/grafana/dashboards
          readOnly: true
      volumes:
      - name: grafana-storage
        {{- if .Values.monitoring.grafana.persistence.enabled }}
        persistentVolumeClaim:
          claimName: grafana-pvc
        {{- else }}
        emptyDir: {}
        {{- end }}
      - name: grafana-datasources
        configMap:
          name: grafana-datasources
      - name: grafana-dashboards-config
        configMap:
          name: grafana-dashboards-config
      - name: grafana-dashboards
        configMap:
          name: grafana-dashboards

---
{{- if .Values.monitoring.grafana.persistence.enabled }}
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana-pvc
  labels:
    {{- include "threads.labels" . | nindent 4 }}
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.monitoring.grafana.persistence.size }}
  {{- if .Values.monitoring.grafana.persistence.storageClass }}
  storageClassName: {{ .Values.monitoring.grafana.persistence.storageClass }}
  {{- end }}

---
{{- end }}
apiVersion: v1
kind: Service
metadata:
  name: grafana
  labels:
    app: grafana
    {{- include "threads.labels" . | nindent 4 }}
spec:
  ports:
  - port: 3000
    targetPort: 3000
    name: grafana
  selector:
    app: grafana

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-datasources
  labels:
    {{- include "threads.labels" . | nindent 4 }}
data:
  datasources.yaml: |
    apiVersion: 1
    datasources:
    - name: Prometheus
      type: prometheus
      access: proxy
      url: {{ .Values.monitoring.prometheus.url }}
      isDefault: true
      editable: true

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboards-config
  labels:
    {{- include "threads.labels" . | nindent 4 }}
data:
  dashboards.yaml: |
    apiVersion: 1
    providers:
    - name: 'threads-agent'
      orgId: 1
      folder: 'Threads Agent'
      type: file
      disableDeletion: false
      updateIntervalSeconds: 10
      allowUiUpdates: true
      options:
        path: /var/lib/grafana/dashboards

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboards
  labels:
    {{- include "threads.labels" . | nindent 4 }}
data:
  business-kpis.json: |
{{ .Files.Get "monitoring/grafana/dashboards/business-kpis.json" | indent 4 }}
  technical-metrics.json: |
{{ .Files.Get "monitoring/grafana/dashboards/technical-metrics.json" | indent 4 }}
  infrastructure.json: |
{{ .Files.Get "monitoring/grafana/dashboards/infrastructure.json" | indent 4 }}
{{- end }}
