# chart/templates/minio.yaml
{{- if .Values.minio.enabled }}

# 1️⃣ Secret → access / secret keys (dev-only hard-coded)
apiVersion: v1
kind: Secret
metadata:
  name: minio-secret
type: Opaque
stringData:
  MINIO_ROOT_USER: "minio"
  MINIO_ROOT_PASSWORD: "minio123"

---

# 2️⃣ StatefulSet (gateway-mode = no local disks)
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: minio
spec:
  serviceName: minio
  replicas: 1
  selector:
    matchLabels: { app: minio }
  template:
    metadata:
      labels: { app: minio }
    spec:
      serviceAccountName: minio-sa
      containers:
        - name: minio
          image: bitnami/minio:2024
          args: ["server", "--address", ":9000", "/data"]
          envFrom:
            - secretRef: { name: minio-secret }
          ports:
            - containerPort: 9000
          readinessProbe:
            httpGet: { path: /minio/health/ready, port: 9000 }
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet: { path: /minio/health/live, port: 9000 }
            initialDelaySeconds: 10
            periodSeconds: 20
          volumeMounts:
            - name: data
              mountPath: /data
  volumeClaimTemplates:
    - metadata: { name: data }
      spec:
        storageClassName: local-path
        accessModes: [ReadWriteOnce]
        resources:
          requests: { storage: 1Gi }

---

# 3️⃣ Cluster-IP Service
apiVersion: v1
kind: Service
metadata:
  name: minio
spec:
  selector: { app: minio }
  ports:
    - port: 9000
      targetPort: 9000

---

# 4️⃣ ServiceAccount
apiVersion: v1
kind: ServiceAccount
metadata:
  name: minio-sa

{{- end }}
