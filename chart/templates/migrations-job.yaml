# chart/templates/migrations-job.yaml
{{- if .Values.postgres.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: migrations
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "10"
spec:
  template:
    spec:
      restartPolicy: OnFailure

      # 1Ô∏è‚É£  Wait until the super-user works and create database
      initContainers:
      - name: wait-pg-and-create-db
        image: bitnami/postgresql:16
        env:
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-postgresql
              key: POSTGRES_PASSWORD
        command: ["sh","-ec",
          "echo '‚è≥ waiting for Postgres super-user ‚Ä¶'; \
           for i in $(seq 1 60); do \
             PGPASSWORD=\"$POSTGRES_PASSWORD\" psql -h postgres -U postgres -c 'select 1' >/dev/null 2>&1 && break; \
             sleep 2; \
           done; \
           if [ $i -eq 60 ]; then echo 'üí• postgres still locked'; exit 1; fi; \
           echo '‚úÖ Postgres is ready'; \
           echo 'Checking if threads_agent database exists...'; \
           if ! PGPASSWORD=\"$POSTGRES_PASSWORD\" psql -h postgres -U postgres -tc \"SELECT 1 FROM pg_database WHERE datname = 'threads_agent'\" | grep -q 1; then \
             echo 'Creating threads_agent database...'; \
             PGPASSWORD=\"$POSTGRES_PASSWORD\" psql -h postgres -U postgres -c 'CREATE DATABASE threads_agent;'; \
           else \
             echo 'threads_agent database already exists'; \
           fi; \
           echo 'Verifying database creation...'; \
           PGPASSWORD=\"$POSTGRES_PASSWORD\" psql -h postgres -U postgres -lqt | cut -d \| -f 1 | grep -qw threads_agent || exit 1; \
           echo '‚úÖ Database ready'"]

      # 2Ô∏è‚É£  Run Alembic migrations
      containers:
      - name: alembic
        image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        envFrom:                       # lift pw directly into env
          - secretRef: { name: {{ .Release.Name }}-postgresql }
        command:
          - /bin/sh
          - -c
          - |
              # Database is already created by initContainer
              echo "Running migrations on threads_agent database..."
              export POSTGRES_DSN="postgresql+psycopg2://postgres:${POSTGRES_PASSWORD}@postgres:5432/threads_agent"
              alembic -c /app/services/orchestrator/db/alembic.ini upgrade head
{{- end }}
