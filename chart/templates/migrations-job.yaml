# chart/templates/migrations-job.yaml
{{- if .Values.postgres.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: migrations
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "10"
spec:
  backoffLimit: 3
  activeDeadlineSeconds: 300
  template:
    spec:
      restartPolicy: OnFailure

      # 1️⃣  Wait until the super-user works and create database
      initContainers:
      - name: wait-pg-and-create-db
        image: bitnami/postgresql:16
        env:
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: threads-postgresql
              key: POSTGRES_PASSWORD
        command: ["/bin/sh", "-c"]
        args:
          - |
            set -e
            echo "waiting for Postgres..."
            export PGPASSWORD="${POSTGRES_PASSWORD}"
            
            # Wait for postgres to be ready
            until /opt/bitnami/postgresql/bin/psql -h postgres -U postgres -c "SELECT 1" >/dev/null 2>&1; do
              echo "Postgres is unavailable - sleeping"
              sleep 2
            done
            
            echo "Postgres is ready"
            
            # Check if database exists
            if /opt/bitnami/postgresql/bin/psql -h postgres -U postgres -lqt | cut -d \| -f 1 | grep -qw threads_agent; then
              echo "Database threads_agent already exists"
            else
              echo "Creating database threads_agent"
              /opt/bitnami/postgresql/bin/psql -h postgres -U postgres -c "CREATE DATABASE threads_agent;"
            fi
            
            echo "Database setup complete"

      # 2️⃣  Run Alembic migrations
      containers:
      - name: alembic
        image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        envFrom:                       # lift pw directly into env
          - secretRef: { name: threads-postgresql }
        command:
          - /bin/sh
          - -c
          - |
              # Database is already created by initContainer
              echo "Running migrations on threads_agent database..."
              export POSTGRES_DSN="postgresql+psycopg2://postgres:${POSTGRES_PASSWORD}@postgres:5432/threads_agent"
              alembic -c /app/services/orchestrator/db/alembic.ini upgrade head
{{- end }}
