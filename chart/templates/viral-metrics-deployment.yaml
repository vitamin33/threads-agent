apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "threads-agent.fullname" . }}-viral-metrics
  labels:
    {{- include "threads-agent.labels" . | nindent 4 }}
    app.kubernetes.io/component: viral-metrics
spec:
  {{- if not .Values.viralMetrics.autoscaling.enabled }}
  replicas: {{ .Values.viralMetrics.replicas }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "threads-agent.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: viral-metrics
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "threads-agent.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: viral-metrics
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "threads-agent.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/component
                  operator: In
                  values:
                  - viral-metrics
              topologyKey: kubernetes.io/hostname
      containers:
      - name: viral-metrics
        securityContext:
          {{- toYaml .Values.securityContext | nindent 12 }}
        image: "{{ .Values.viralMetrics.image.repository }}:{{ .Values.viralMetrics.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.viralMetrics.image.pullPolicy }}
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        - name: metrics
          containerPort: 9090
          protocol: TCP
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: {{ include "threads-agent.fullname" . }}-secrets
              key: database-url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: {{ include "threads-agent.fullname" . }}-secrets
              key: redis-url
        - name: FAKE_THREADS_URL
          value: "http://{{ include "threads-agent.fullname" . }}-fake-threads:9009"
        - name: BATCH_SIZE
          value: "{{ .Values.viralMetrics.batchSize }}"
        - name: MAX_PARALLEL_TASKS
          value: "{{ .Values.viralMetrics.maxParallelTasks }}"
        - name: CACHE_TTL
          value: "{{ .Values.viralMetrics.cacheTtl }}"
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        resources:
          {{- toYaml .Values.viralMetrics.resources | nindent 12 }}
        volumeMounts:
        - name: tmp
          mountPath: /tmp
      volumes:
      - name: tmp
        emptyDir: {}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}