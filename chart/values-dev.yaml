# ────────────────────────────────────────────────
# values-dev.yaml  – local k3d overrides
# ────────────────────────────────────────────────
replicaCount: 1

image:
  repository: orchestrator            # ← local images, no GHCR prefix
  tag: local

celeryWorker:
  image:
    repository: celery-worker
    tag: local

viralEngine:
  enabled: true
  image:
    repository: viral-engine
    tag: local

viralPatternEngine:
  enabled: true
  image:
    repository: viral-pattern-engine
    tag: local

techDocGenerator:
  enabled: false    # Temporarily disabled for CI stability
  image:
    repository: tech-doc-generator
    tag: local
  
  # Enable AI ROI Calculator for local testing
  roiCalculator:
    enabled: true
    ingress:
      enabled: false               # disable for local testing
  
  # Content scheduler enabled for local development
  contentScheduler:
    enabled: true
    defaultCompanies: "anthropic,notion,stripe"
    autoGenerate: false           # manual trigger for development
  
  # All features enabled for development testing
  professionalContentEngine:
    enabled: true
    viralEngineIntegration: true
  
  achievementIntegration:
    enabled: true

personaRuntime:
  image:
    repository: persona-runtime
    tag: local
  env:
    - name: HOOK_MODEL
      value: gpt-4o
    - name: BODY_MODEL
      value: gpt-3.5-turbo-0125
    # optional LoRA location
    - name: LORA_PATH
      value: /models/lora.safetensors
    - name: OPENAI_API_KEY   # forces stub even if the Secret still exists
      value: "test"
    - name: VIRAL_ENGINE_URL   # viral hook optimization service
      value: "http://viral-engine:8090"

rabbitmq:
  url: "amqp://user:pass@rabbitmq:5672/%2f"

# ───────── stub-stack services ─────────
postgres:
  enabled: true
  auth:
    postgresPassword: pass
  storage: 1Gi                         # pvc size used in pvc.yaml / template

qdrant:
  enabled: true
  storage: 1Gi
  image:
    repository: qdrant/qdrant
    tag: v1.9.4

minio:
  enabled: true
  image:
    repository: bitnami/minio             # one place to change if you ever use a mirror
    tag: "2024"                           # dev-friendly multi-arch tag
  accessKey: minio
  secretKey: minio123
  storage: 1Gi

fakeThreads:
  enabled: true
  image:
    repository: fake-threads
    tag: local
  port: 9009
  pullSecret: ghcr-creds               # docker login secret (GHCR PAT)

threadsService:                        # used by orchestrator & worker envs
  name: fake-threads
  port: 9009

# Real Threads API integration (disabled by default)
# To enable: set enabled: true and provide credentials
threadsAdaptor:
  enabled: false
  image:
    repository: threads-adaptor
    tag: "local"
    pullPolicy: IfNotPresent
  replicas: 1
  rateLimit: 20                        # requests per minute
  credentials:
    # Get these from Meta Developer Dashboard
    # See docs/threads-api-setup.md for instructions
    appId: ""                          # Your Threads App ID
    appSecret: ""                      # Your Threads App Secret
    accessToken: ""                    # User Access Token
    userId: ""                         # Your Threads User ID
  resources:
    requests:
      memory: "256Mi"
      cpu: "100m"
    limits:
      memory: "512Mi"
      cpu: "500m"

openai:
  enabled: true
  apiKey: "test"  # Development mode

# Redis for caching trends and token optimization
redis:
  enabled: true
  persistence:
    enabled: true
    size: 2Gi
    storageClass: local-path

# ───────── service for orchestrator itself ─────────
service:
  type: ClusterIP
  port: 8080

global:
  storageClass: local-path

resources: {}

# ───────── monitoring & observability ─────────
monitoring:
  prometheus:
    enabled: true
    url: http://prometheus:9090
    persistence:
      enabled: true
      size: 2Gi
      storageClass: local-path
  grafana:
    enabled: true
    adminPassword: admin123
    plugins: "grafana-piechart-panel"
    persistence:
      enabled: true
      size: 1Gi
      storageClass: local-path
    externalUrl: http://localhost:3000
  alertmanager:
    enabled: true
    persistence:
      enabled: true
      size: 1Gi
      storageClass: local-path
    externalUrl: http://localhost:9093
    # Email configuration (dev only)
    smtp:
      smarthost: "localhost:1025"          # MailHog for dev testing
      from: "dev-alerts@threads-agent.local"
      auth:
        username: ""
        password: ""
    # Slack integration (optional for dev - disabled by default)
    slack:
      enabled: false                       # enable if you have a dev Slack webhook
      apiUrl: ""                           # add your dev Slack webhook URL
      warningsChannel: "#dev-alerts"
      infrastructureChannel: "#dev-infra"
    # Email recipients (dev)
    email:
      enabled: true
      from: "dev-alerts@threads-agent.local"
      businessRecipients: "dev-business@threads-agent.local"
      infrastructureRecipients: "dev-ops@threads-agent.local"

# Redis cache for trend data and search results
redis:
  enabled: true

# Achievement Collector for professional portfolio
achievementCollector:
  enabled: true
  github:
    webhookSecret: "dev-webhook-secret"
    token: "test-github-token"
  prometheus:
    scrapeInterval: "24"  # hours
  sqlite:
    enabled: false  # use PostgreSQL in cluster

# Performance Monitor for early variant kill
performanceMonitor:
  enabled: true
  logLevel: "DEBUG"  # More verbose for dev
  killThreshold: 0.5
  minInteractions: 5  # Lower threshold for dev testing
  timeoutMinutes: 5   # Shorter timeout for dev
