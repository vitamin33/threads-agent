# chart/values-ci.yaml
# ─────────────────── CI overrides (local images) ───────────────────

image:
  repository: orchestrator   # <— matches docker build tag
  tag: "local"
  pullPolicy: IfNotPresent  # Will use local if available, pull if not

celeryWorker:
  image:
    repository: celery-worker
    tag: "local"
    pullPolicy: IfNotPresent  # Will use local if available, pull if not

personaRuntime:
  image:
    repository: persona-runtime
    tag: "local"
    pullPolicy: IfNotPresent  # Will use local if available, pull if not
  env:
    - name: HOOK_MODEL
      value: gpt-4o
    - name: BODY_MODEL
      value: gpt-3.5-turbo-0125
    # optional LoRA location
    - name: LORA_PATH
      value: /models/lora.safetensors
    # Enable fast CI mocking
    - name: OPENAI_MOCK
      value: "1"

fakeThreads:
  enabled: true
  image:
    repository: fake-threads
    tag: "local"
    pullPolicy: IfNotPresent  # Will use local if available, pull if not
  port: 9009

threadsService:
  name: fake-threads
  port: 9009

# stub Postgres for e2e
postgres:
  enabled: true
  storage: 1Gi
  auth:
    # This password is written into the Bitnami-generated Secret
    #   Name:  <release>-postgresql
    #   Key :  postgres-password
    #
    # The migrations Job reads that same key, so *any* value works,
    # as long as it is present.
    postgresPassword: pass

qdrant:
  enabled: true
  storage: 1Gi
  image:
    repository: qdrant/qdrant
    tag: v1.9.4

# MinIO not needed in CI yet
minio:
  enabled: false

# Redis for caching and token optimization
redis:
  enabled: true
  persistence:
    enabled: false  # No persistence needed in CI

# Viral Engine for content quality
viralEngine:
  enabled: true
  image:
    repository: viral-engine
    tag: "local"
    pullPolicy: IfNotPresent  # Will use local if available, pull if not

# Revenue service for monetization
revenue:
  enabled: true
  image:
    repository: revenue
    tag: "local"
    pullPolicy: IfNotPresent  # Will use local if available, pull if not
  stripe:
    apiKey: "test_key"  # Dummy key for CI
    webhookSecret: "test_webhook_secret"
    priceBasic: "price_test_basic"
    pricePro: "price_test_pro"
    priceEnterprise: "price_test_enterprise"
  affiliateId: "test_affiliate_123"

openai:
  enabled: true
  apiKey: "REPLACE_IN_RUNTIME"

# Viral Metrics service for real-time metrics collection
viralMetrics:
  enabled: true
  image:
    repository: viral-metrics
    tag: "local"
    pullPolicy: IfNotPresent  # Will use local if available, pull if not

# MLflow configuration - disabled in CI to avoid CRD dependencies
mlflow:
  trackingUri: "http://mlflow:5000"
  registryUri: "http://mlflow:5000"
  performanceOptimization:
    enabled: false

global:
  storageClass: local-path

service:
  type: ClusterIP
  port: 8080

# Conversation Engine - disable monitoring features for CI
conversationEngine:
  enabled: true
  image:
    repository: conversation-engine
    tag: "local"
    pullPolicy: IfNotPresent
  serviceMonitor:
    enabled: false  # No Prometheus CRDs in CI
  pdb:
    enabled: false  # No PDB in CI
  autoscaling:
    enabled: false  # No HPA in CI
# CI trigger
