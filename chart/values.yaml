# /chart/values.yaml
nameOverride: ""
fullnameOverride: ""

# ───────── core service images ─────────
image:
  repository: ghcr.io/threads-agent-stack/orchestrator
  tag: "0.2.0"

personaRuntime:
  image:
    repository: ghcr.io/threads-agent-stack/persona-runtime
    tag: "0.3.0"
  env: []

# RabbitMQ broker DSN used by orchestrator / Celery
rabbitmq:
  url: "amqp://user:pass@rabbitmq:5672/%2f"

# ───────── new stub-stack toggles (all OFF by default) ─────────
postgres:
  enabled: false                   # turn ON in dev/ci values
  storage: 1Gi                     # PVC size; template uses .Values.postgres.storage

minio:
  enabled: false                   # turn ON in dev values
  accessKey: "minio"               # overridden in env Secret
  secretKey: "minio123"
  storage: 1Gi

fakeThreads:
  enabled: false                   # turn ON in dev/ci values
  image:
    repository: ghcr.io/threads-agent-stack/fake-threads
    tag: "0.1.0"
  port: 9009
  pullSecret: ""                   # leave blank unless you push to a private registry

threadsService:                    # orchestrator ↔︎ fake-threads alias
  name: fake-threads
  port: 9009

celeryWorker:
  enabled: true
  image:
    repository: ghcr.io/threads-agent-stack/celery-worker
    tag: "0.2.0"

viralEngine:
  enabled: false                   # turn ON in dev/ci values
  image:
    repository: ghcr.io/threads-agent-stack/viral-engine
    tag: "0.1.0"

threadsAdaptor:
  enabled: false                   # turn ON when using real Threads API
  image:
    repository: threads-adaptor
    tag: "local"
    pullPolicy: IfNotPresent
  replicas: 1
  rateLimit: 20                    # requests per minute
  credentials:
    appId: ""                      # Threads App ID
    appSecret: ""                  # Threads App Secret

revenue:
  enabled: false                   # turn ON to enable revenue infrastructure
  image:
    repository: revenue
    tag: "local"
    pullPolicy: IfNotPresent
  replicas: 1
  stripe:
    apiKey: ""                     # Stripe API key (sk_test_... or sk_live_...)
    webhookSecret: ""              # Stripe webhook endpoint secret
    priceBasic: ""                 # Stripe price ID for basic tier
    pricePro: ""                   # Stripe price ID for pro tier
    priceEnterprise: ""            # Stripe price ID for enterprise tier
  affiliateId: "viral123"          # Default affiliate tracking ID
  resources:
    requests:
      memory: "256Mi"
      cpu: "100m"
    limits:
      memory: "512Mi"
      cpu: "500m"

threadsAdaptor:
  credentials:
    accessToken: ""                # Threads Access Token
    userId: ""                     # Threads User ID
  resources:
    requests:
      memory: "256Mi"
      cpu: "100m"
    limits:
      memory: "512Mi"
      cpu: "500m"
  extraEnv: []

# ───────── generic chart knobs ─────────
replicaCount: 1

service:
  type: ClusterIP
  port: 8080

resources: {}

# ───────── monitoring & observability ─────────
monitoring:
  prometheus:
    enabled: false                    # turn ON in dev/prod values
    url: http://prometheus:9090
    image:
      repository: prom/prometheus
      tag: "v2.47.0"
    persistence:
      enabled: false
      size: 2Gi
      storageClass: ""
    resources:
      limits:
        cpu: 200m
        memory: 256Mi
      requests:
        cpu: 100m
        memory: 128Mi
  grafana:
    enabled: false                     # turn ON in dev/prod values
    image:
      repository: grafana/grafana
      tag: "10.2.0"
    adminPassword: admin123           # override in prod
    plugins: ""                       # comma-separated list of plugins
    persistence:
      enabled: false
      size: 1Gi
      storageClass: ""
    resources:
      limits:
        cpu: 200m
        memory: 256Mi
      requests:
        cpu: 100m
        memory: 128Mi
  alertmanager:
    enabled: false                        # turn ON in dev/prod values
    image:
      repository: prom/alertmanager
      tag: "v0.26.0"
    replicas: 1
    externalUrl: ""                       # override in prod (e.g., https://alerts.company.com)
    logLevel: info
    dataRetention: 120h
    persistence:
      enabled: false
      size: 1Gi
      storageClass: ""
    resources:
      limits:
        cpu: 100m
        memory: 128Mi
      requests:
        cpu: 50m
        memory: 64Mi
    # Email configuration
    smtp:
      smarthost: "localhost:587"
      from: "alerts@threads-agent.com"
      auth:
        username: ""                      # override in prod
        password: ""                      # override in prod
    # PagerDuty integration
    pagerduty:
      enabled: false                      # turn ON in prod values
      integrationKey: ""                  # override in prod (secret)
    # Slack integration
    slack:
      enabled: false                      # turn ON in dev/prod values
      apiUrl: ""                          # override with webhook URL
      warningsChannel: "#alerts-warnings"
      infrastructureChannel: "#alerts-infrastructure"
    # Email recipients
    email:
      enabled: false                      # turn ON in prod values
      from: "alerts@threads-agent.com"
      businessRecipients: "business@threads-agent.com"
      infrastructureRecipients: "ops@threads-agent.com"

# Redis cache for trend analysis and token optimization
redis:
  enabled: false                          # turn ON in dev/prod values for caching
  image:
    repository: redis
    tag: "7-alpine"
  port: 6379
  persistence:
    enabled: false
    size: 1Gi
  resources:
    limits:
      cpu: 200m
      memory: 256Mi
    requests:
      cpu: 100m
      memory: 128Mi

# ───────── CI Monitor (disabled by default) ─────────
ciMonitor:
  enabled: false
  image:
    repository: ci-monitor
    tag: local
    pullPolicy: IfNotPresent
  githubToken: ""
  anthropicApiKey: ""
  monitorInterval: "300"
  autoApprove: "false"
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 200m
      memory: 256Mi
