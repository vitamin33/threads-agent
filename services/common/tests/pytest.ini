[tool:pytest]
# Pytest configuration for CI/CD Pipeline comprehensive testing

# Test discovery
testpaths = services/common/tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Test execution
addopts = 
    -v
    --strict-markers
    --strict-config
    --tb=short
    --timeout=300
    --timeout-method=thread
    --disable-warnings
    --color=yes
    --durations=10
    --cov=services/common
    --cov-report=html:test_reports/coverage_html
    --cov-report=json:test_reports/coverage.json
    --cov-report=term-missing
    --cov-fail-under=95
    --junit-xml=test_reports/junit.xml
    --json-report
    --json-report-file=test_reports/report.json

# Markers for test categorization
markers =
    unit: Unit tests for individual components
    integration: Integration tests between components
    e2e: End-to-end tests requiring full k3d cluster
    performance: Performance and SLA compliance tests
    failure_injection: Failure injection and resilience tests
    security: Security and permission validation tests
    comprehensive: Comprehensive test suite execution
    slow: Tests that take longer than 30 seconds
    quick: Fast tests that complete within 5 seconds

# Test filtering
filterwarnings =
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::ResourceWarning

# Timeouts
timeout = 300
timeout_method = thread

# Coverage configuration
[coverage:run]
source = services/common
omit = 
    */tests/*
    */test_*.py
    */__pycache__/*
    */venv/*
    */env/*
    */conftest.py

branch = true
parallel = true

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

ignore_errors = true
show_missing = true
precision = 2

[coverage:html]
directory = test_reports/coverage_html

[coverage:json]
output = test_reports/coverage.json