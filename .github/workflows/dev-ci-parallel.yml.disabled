# Parallel test execution with smart splitting
name: dev-ci-parallel

on:
  pull_request:
    branches: [main]

jobs:
  # First job: collect test list and split them
  test-split:
    runs-on: ubuntu-22.04
    outputs:
      test-matrix: ${{ steps.split.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Collect and split tests
        id: split
        run: |
          # Find all test files
          TEST_FILES=$(find . -name "test_*.py" -o -name "*_test.py" | sort)
          
          # Split into 4 groups
          TOTAL=$(echo "$TEST_FILES" | wc -l)
          SPLIT=$((TOTAL / 4 + 1))
          
          # Create matrix JSON
          echo "matrix={\"group\":[" > matrix.json
          echo "$TEST_FILES" | head -n $SPLIT | tr '\n' ' ' | sed 's/^/{"tests":"/;s/$/"},/' >> matrix.json
          echo "$TEST_FILES" | tail -n +$((SPLIT + 1)) | head -n $SPLIT | tr '\n' ' ' | sed 's/^/{"tests":"/;s/$/"},/' >> matrix.json
          echo "$TEST_FILES" | tail -n +$((SPLIT * 2 + 1)) | head -n $SPLIT | tr '\n' ' ' | sed 's/^/{"tests":"/;s/$/"},/' >> matrix.json
          echo "$TEST_FILES" | tail -n +$((SPLIT * 3 + 1)) | tr '\n' ' ' | sed 's/^/{"tests":"/;s/$/"}/' >> matrix.json
          echo "]}" >> matrix.json
          
          # Output matrix
          echo "matrix=$(cat matrix.json | jq -c)" >> $GITHUB_OUTPUT

  # Run tests in parallel
  test:
    needs: test-split
    runs-on: ubuntu-22.04
    strategy:
      matrix: ${{ fromJson(needs.test-split.outputs.test-matrix) }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'
      
      - name: Install deps
        run: |
          # Install all service dependencies
          pip install -r services/orchestrator/requirements.txt
          pip install -r services/celery_worker/requirements.txt
          pip install -r services/persona_runtime/requirements.txt
          pip install -r services/fake_threads/requirements.txt
          pip install -r services/viral_engine/requirements.txt
          pip install -r services/threads_adaptor/requirements.txt
          pip install -r tests/requirements.txt
          
      - name: Run test group
        run: |
          pytest ${{ matrix.group.tests }} -n auto --timeout=60