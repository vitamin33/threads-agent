id: feature-14-1-content-scheduler-database
title: "Content Scheduler Database Schema & Models"
description: |
  Comprehensive database schema design for content scheduling pipeline with support
  for multi-platform publishing, content lifecycle management, scheduling with timezone
  support, performance analytics, A/B testing, and workflow management.

epic_id: epic-14-content-scheduler-pipeline
priority: high
status: planned
estimated_hours: 48
estimated_story_points: 12

database_schema:
  content_items:
    - id: BigInteger (PK)
    - title: Text (indexed)
    - content: Text
    - summary: Text
    - content_type: String (post, article, thread, carousel)
    - status: String (draft, scheduled, published, failed, archived)
    - platform_configs: JSON (platform-specific configurations)
    - tags: ARRAY[String] (indexed)
    - author_id: String (indexed)
    - source_type: String (manual, ai_generated, template)
    - source_reference: String (achievement_id, viral_score, etc.)
    - created_at: DateTime (indexed)
    - updated_at: DateTime
    - scheduled_for: DateTime (indexed, timezone-aware)
    - published_at: DateTime (indexed)
    - expires_at: DateTime (for content expiration)

  content_schedules:
    - id: BigInteger (PK)
    - content_item_id: BigInteger (FK)
    - platform_id: String (dev_to, linkedin, threads, medium, twitter)
    - scheduled_time: DateTime (timezone-aware, indexed)
    - timezone: String (America/New_York, Europe/London, etc.)
    - retry_count: Integer (default: 0)
    - max_retries: Integer (default: 3)
    - retry_strategy: String (exponential, linear, custom)
    - publish_status: String (pending, publishing, published, failed, cancelled)
    - platform_post_id: String (external platform ID after publish)
    - error_message: Text
    - metadata: JSON (platform-specific metadata)
    - created_at: DateTime
    - updated_at: DateTime

  content_templates:
    - id: BigInteger (PK)
    - name: String (indexed)
    - category: String (announcement, tutorial, story, etc.)
    - template_type: String (markdown, structured, dynamic)
    - content_template: Text (with placeholder variables)
    - variables: JSON (defined template variables)
    - default_platforms: ARRAY[String]
    - usage_count: Integer (tracked usage)
    - effectiveness_score: Float (performance metric)
    - created_by: String
    - is_active: Boolean (indexed)
    - created_at: DateTime
    - updated_at: DateTime

  content_variations:
    - id: BigInteger (PK)
    - parent_content_id: BigInteger (FK)
    - variation_type: String (a_b_test, platform_specific, audience_targeted)
    - variation_data: JSON (content differences)
    - test_percentage: Float (for A/B testing)
    - performance_metrics: JSON (engagement, clicks, conversions)
    - is_winner: Boolean (A/B test results)
    - created_at: DateTime
    - updated_at: DateTime

  content_analytics:
    - id: BigInteger (PK)
    - content_item_id: BigInteger (FK)
    - platform_id: String
    - engagement_rate: Float (indexed)
    - likes_count: Integer
    - shares_count: Integer
    - comments_count: Integer
    - clicks_count: Integer
    - impressions: Integer
    - reach: Integer
    - viral_coefficient: Float
    - cost_per_engagement: Float
    - revenue_attributed: Float
    - measured_at: DateTime (indexed)
    - created_at: DateTime

  publishing_workflows:
    - id: BigInteger (PK)
    - name: String
    - description: Text
    - workflow_steps: JSON (ordered list of steps)
    - approval_required: Boolean
    - approvers: ARRAY[String] (user IDs)
    - notification_settings: JSON
    - is_active: Boolean (indexed)
    - created_by: String
    - created_at: DateTime
    - updated_at: DateTime

  workflow_executions:
    - id: BigInteger (PK)
    - workflow_id: BigInteger (FK)
    - content_item_id: BigInteger (FK)
    - current_step: Integer
    - status: String (pending, in_progress, approved, rejected, completed)
    - approvals: JSON (approval history)
    - step_history: JSON (execution log)
    - started_at: DateTime
    - completed_at: DateTime
    - created_at: DateTime

tasks:
  - id: task-14-1-1
    title: "Create content_items table migration"
    description: "Create migration for main content items table with all fields and indexes"
    type: implementation
    estimated_hours: 6
    acceptance_criteria:
      - "Migration creates content_items table with all specified fields"
      - "Proper indexes created for performance"
      - "Foreign key relationships established"
      - "Default values and constraints applied"

  - id: task-14-1-2
    title: "Create content_schedules table migration"
    description: "Create migration for content scheduling with timezone support"
    type: implementation
    estimated_hours: 4
    acceptance_criteria:
      - "Migration creates content_schedules table"
      - "Timezone-aware datetime fields implemented"
      - "Retry mechanism fields included"
      - "Platform-specific metadata support"

  - id: task-14-1-3
    title: "Create content_templates table migration"
    description: "Create migration for reusable content templates"
    type: implementation
    estimated_hours: 3
    acceptance_criteria:
      - "Migration creates content_templates table"
      - "Variable substitution support"
      - "Performance tracking fields"
      - "Template versioning support"

  - id: task-14-1-4
    title: "Create content_variations table migration"
    description: "Create migration for A/B testing and content variations"
    type: implementation
    estimated_hours: 4
    acceptance_criteria:
      - "Migration creates content_variations table"
      - "A/B testing fields implemented"
      - "Performance comparison support"
      - "Winner selection tracking"

  - id: task-14-1-5
    title: "Create content_analytics table migration"
    description: "Create migration for comprehensive content analytics"
    type: implementation
    estimated_hours: 5
    acceptance_criteria:
      - "Migration creates content_analytics table"
      - "All engagement metrics included"
      - "Time-series data support"
      - "Revenue attribution tracking"

  - id: task-14-1-6
    title: "Create workflow tables migrations"
    description: "Create migrations for publishing workflows and executions"
    type: implementation
    estimated_hours: 6
    acceptance_criteria:
      - "Both workflow tables created"
      - "Approval system support"
      - "Step execution tracking"
      - "Notification integration points"

  - id: task-14-1-7
    title: "Implement SQLAlchemy models"
    description: "Create SQLAlchemy models for all content scheduler tables"
    type: implementation
    estimated_hours: 8
    acceptance_criteria:
      - "All models implemented with proper relationships"
      - "Hybrid properties for calculated fields"
      - "Model validation and constraints"
      - "Type hints and documentation"

  - id: task-14-1-8
    title: "Create database indexes optimization"
    description: "Optimize database indexes for content scheduler queries"
    type: implementation
    estimated_hours: 4
    acceptance_criteria:
      - "Composite indexes for common query patterns"
      - "Performance analysis conducted"
      - "Index usage monitoring setup"
      - "Query optimization recommendations"

  - id: task-14-1-9
    title: "Write comprehensive unit tests"
    description: "Test all database models and relationships"
    type: testing
    estimated_hours: 6
    acceptance_criteria:
      - "All models tested with fixtures"
      - "Relationship testing comprehensive"
      - "Edge cases covered"
      - "Performance test scenarios"

  - id: task-14-1-10
    title: "Create database documentation"
    description: "Document schema design and usage patterns"
    type: documentation
    estimated_hours: 2
    acceptance_criteria:
      - "Schema documentation complete"
      - "Relationship diagrams created"
      - "Usage examples provided"
      - "Migration procedures documented"

dependencies:
  - PostgreSQL database (existing)
  - Alembic migration system (existing)
  - SQLAlchemy ORM (existing)

integration_points:
  - orchestrator.db.models (extend existing models)
  - achievement_collector (content source integration)
  - viral_engine (quality scoring integration)