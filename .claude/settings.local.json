{
  "permissions": {
    "allow": [
      "mcp__linear__linear_searchIssues",
      "mcp__linear__linear_getIssues",
      "Bash(find:*)",
      "mcp__linear__linear_getViewer",
      "mcp__linear__linear_getTeams",
      "Bash(kubectl get:*)",
      "Bash(helm list:*)",
      "mcp__filesystem__read_multiple_files",
      "mcp__filesystem__read_file",
      "mcp__linear__linear_getIssueById",
      "Bash(mkdir:*)",
      "Bash(python -m pytest services/threads_adaptor/tests/unit/test_limiter.py -v)",
      "Bash(python3 -m pytest services/threads_adaptor/tests/unit/test_limiter.py -v)",
      "Bash(ls:*)",
      "Bash(python -m pytest services/threads_adaptor/tests/unit/test_limiter.py::TestTokenBucketLimiter::test_acquire_nowait_failure -xvs)",
      "Bash(python -m pytest services/threads_adaptor/tests/unit/test_limiter.py::TestHighVolumeRateLimiting::test_25_calls_inserts_pauses -xvs)",
      "Bash(python3:*)",
      "Bash(timeout 10s python -m pytest:*)",
      "Bash(python -m pytest services/threads_adaptor/tests/unit/test_limiter.py::TestHighVolumeRateLimiting::test_25_calls_inserts_pauses -xvs --timeout=10)",
      "Bash(python -m pytest services/threads_adaptor/tests/unit/test_limiter.py::TestHighVolumeRateLimiting::test_burst_then_steady_rate -xvs)",
      "Bash(mypy:*)",
      "Bash(just ship:*)",
      "Bash(python -m pytest services/threads_adaptor/tests/unit/test_limiter.py::TestTokenBucketLimiter::test_token_refill -xvs)",
      "mcp__filesystem__search_files",
      "Bash(curl:*)",
      "Bash(pkill:*)",
      "Bash(true)",
      "Bash(kubectl logs:*)",
      "Bash(chmod:*)",
      "Bash(./scripts/quality-gates.sh:*)",
      "Bash(PYTHONPATH=$PWD:$PYTHONPATH pytest -s -m e2e tests/e2e/test_post_flow.py::test_draft_post_happy_path)",
      "Bash(just lint)",
      "Bash(pip install:*)",
      "Bash(PYTHONPATH=$PWD:$PYTHONPATH pytest -s -m e2e)",
      "Bash(PYTHONPATH=$PWD:$PYTHONPATH pytest -q)",
      "Bash(source:*)",
      "Bash(isort:*)",
      "Bash(just pre-commit-check:*)",
      "Bash(ruff format:*)",
      "Bash(just pre-commit-fix:*)",
      "Bash(./scripts/learning-system.sh:*)",
      "Bash(just analyze-patterns:*)",
      "Bash(just benchmark-performance:*)",
      "Bash(just learning-report:*)",
      "Bash(just learning-dashboard:*)",
      "Bash(./scripts/workflow-automation.sh:*)",
      "Bash(just workflow-dashboard:*)",
      "Bash(just orchestrate:*)",
      "Bash(just:*)",
      "Bash(just check)"
    ],
    "deny": []
  }
}